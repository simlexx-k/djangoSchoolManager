# Generated by Django 5.1.1 on 2024-12-21 20:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('learners', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('exam_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('term', models.CharField(choices=[('Term 1', 'Term 1'), ('Term 2', 'Term 2'), ('Term 3', 'Term 3')], default='Term 1', max_length=100)),
                ('date_administered', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('due_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('estimated_time', models.DurationField(blank=True, null=True)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('categories', models.TextField(blank=True, null=True)),
                ('prerequisites', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('learning_objectives', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('is_group_assignment', models.BooleanField(default=False)),
                ('max_group_size', models.PositiveIntegerField(blank=True, null=True)),
                ('enable_peer_review', models.BooleanField(default=False)),
                ('submission_types', models.CharField(blank=True, max_length=255, null=True)),
                ('allow_attachments', models.BooleanField(default=True)),
                ('max_file_size', models.PositiveIntegerField(default=10, help_text='Maximum file size in MB')),
                ('plagiarism_check', models.BooleanField(default=False)),
                ('auto_grading', models.BooleanField(default=False)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='learners.grade')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='assignment_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='exams.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('submitted', 'Submitted'), ('graded', 'Graded')], default='in_progress', max_length=20)),
                ('score', models.FloatField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='exams.assignment')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='BehavioralAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('needs_improvement', 'Needs Improvement')], max_length=20)),
                ('comment', models.TextField()),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_assessments', to='learners.learnerregister')),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_assessments', to='exams.examtype')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraCurricularActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=100)),
                ('role', models.CharField(max_length=50)),
                ('achievement', models.TextField(blank=True, null=True)),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracurricular_activities', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracurricular_activities', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_text', django_ckeditor_5.fields.CKEditor5Field()),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_templates', to='exams.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerTotalScore',
            fields=[
                ('learner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='learners.learnerregister')),
                ('total_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('exam_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exams.examtype')),
            ],
        ),
        migrations.CreateModel(
            name='LearningGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.TextField()),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_goals', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_goals', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectiveQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', django_ckeditor_5.fields.CKEditor5Field()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer')], max_length=20)),
                ('option_a', models.CharField(blank=True, max_length=255, null=True)),
                ('option_b', models.CharField(blank=True, max_length=255, null=True)),
                ('option_c', models.CharField(blank=True, max_length=255, null=True)),
                ('option_d', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1, null=True)),
                ('points', models.PositiveIntegerField(default=1)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objective_questions', to='exams.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.objectivequestion')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_responses', to='exams.assignmentsubmission')),
            ],
        ),
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.TextField()),
                ('weights', models.TextField()),
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rubric', to='exams.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='SkillsAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=50)),
                ('rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('needs_improvement', 'Needs Improvement')], max_length=20)),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills_assessments', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills_assessments', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='SocialEmotionalDevelopment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('needs_improvement', 'Needs Improvement')], max_length=20)),
                ('comment', models.TextField()),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_emotional_developments', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_emotional_developments', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.TextField()),
                ('date', models.DateField()),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_achievements', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_achievements', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='StandardizedTestScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateField()),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standardized_test_scores', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standardized_test_scores', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='StudyHabit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('needs_improvement', 'Needs Improvement')], max_length=20)),
                ('comment', models.TextField()),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_habits', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_habits', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('grades', models.ManyToManyField(related_name='subjects', to='learners.grade')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='exams.subject'),
        ),
        migrations.CreateModel(
            name='SupportService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_services', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_services', to='learners.learnerregister')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_comments', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_comments', to='learners.learnerregister')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exams.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late')], default='present', max_length=10)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_attendances', to='learners.learnerregister')),
            ],
            options={
                'unique_together': {('learner', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_date', models.DateField(auto_now_add=True)),
                ('overall_comment', models.TextField()),
                ('areas_for_improvement', models.TextField()),
                ('future_recommendations', models.TextField()),
                ('principal_signature', models.BooleanField(default=False)),
                ('parent_signature', models.BooleanField(default=False)),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='exams.examtype')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='learners.learnerregister')),
            ],
            options={
                'unique_together': {('learner', 'exam_type')},
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('date_examined', models.DateField(blank=True, null=True)),
                ('teacher_comment', models.TextField(blank=True)),
                ('learner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='learners.learnerregister')),
                ('exam_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results', to='exams.examtype')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='exams.subject')),
            ],
            options={
                'unique_together': {('learner_id', 'subject', 'exam_type')},
            },
        ),
    ]
